EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
lab5ta1.exe -- emu8086 assembler version: 4.08  
 
[ 9/24/2025  --  3:26:06 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       include 'emu8086.inc'
[   2]        :                                       
[   3]        :                                       .model small
[   4]        :                                       .stack 100h
[   5]        :                                       
[   6]        :                                       .data
[   7]        :                                       ; (No data section used in this example)
[   8]        :                                       
[   9]        :                                       .code
[  10]    0100:                                       main proc
[  11]    0100: B8 10 00                              mov ax, @data      ; Initialize data segment
[  12]    0103: 8E D8                                 mov ds, ax
[  13]        :                                       
[  14]    0105: BB 03 00                              mov bx, 3          ; Store 3 in BX
[  15]    0108: B9 02 00                              mov cx, 2          ; Store 2 in CX
[  16]    010B: 2B D9                                 sub bx, cx         ; BX = BX - CX (3 - 2 = 1)
[  17]        :                                       
[  18]        :                                       ; Optionally display result
[  19]        :                                       ; call PrintNum
[  20]        :                                       ; mov ax, bx
[  21]        :                                       ; call PrintNum
[  22]        :                                       
[  23]    010D: B8 00 4C                              mov ax, 4C00h      ; Terminate program
[  24]    0110: CD 21                                 int 21h
[  25]        :                                       main endp
[  26]        :                                       end main
[  27]        :                                       
[  28]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 12      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 4C      -   check sum (l.byte)
0013: CA      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 10      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 10      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
