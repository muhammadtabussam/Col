EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
lab5tas2.exe -- emu8086 assembler version: 4.08  
 
[ 9/24/2025  --  3:30:45 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       include 'emu8086.inc'
[   2]        :                                       .stack 100h
[   3]        :                                       .model small
[   4]        :                                       .data
[   5]        :                                       .code
[   6]    0100:                                       main proc
[   7]        :                                       ; program to subtract two digits and store result in memory
[   8]        :                                       
[   9]        :                                       
[  10]    0100: EB 06                                 jmp start           ; Jump over data section
[  11]        :                                       
[  12]    0102: 03 00                                 data1: dw 3         ; First number
[  13]    0104: 02 00                                 data2: dw 2         ; Second number
[  14]    0106: 00 00                                 result: dw 0        ; Memory to store result
[  15]        :                                       
[  16]    0108:                                       start:
[  17]    0108: B8 10 00                              mov ax, seg data1   ; Get segment of data
[  18]    010B: 8E D8                                 mov ds, ax          ; Set DS to that segment
[  19]        :                                       
[  20]    010D: BB 02 00                              mov bx, [data1]     ; Load value from data1
[  21]    0110: B9 04 00                              mov cx, [data2]     ; Load value from data2
[  22]    0113: 2B D9                                 sub bx, cx          ; Subtract: BX = BX - CX
[  23]    0115: 89 1E 06 00                           mov [result], bx    ; Store result in memory
[  24]        :                                       
[  25]    0119: B8 00 4C                              mov ax, 4C00h       ; Exit program
[  26]    011C: CD 21                                 int 21h
[  27]        :                                       
[  28]        :                                       main endp
[  29]        :                                       end main
[  30]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 1E      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 2B      -   check sum (l.byte)
0013: 32      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 10      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 09      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 10      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
